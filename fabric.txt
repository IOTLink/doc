fabric 学习：
fabric-ca 没有配置root ca父ca时，使用命令：
fabric-ca-server start -b <admin>:<adminpw>
会产生一个自签名的：
 ca-cert.pem and ca-key.pem 
假如他们不存在，则产生，并产生配置文件；
-------------------------------------

registry.maxenrollments 设置0 则不允许申请
设置-1 无限制




Cryptogen :
 ./bin/cryptogen generate --config=./crypto-config.yaml
cryptogen 是做什么的？
定义网络拓扑，和网络部件
每个组织都有唯一的root ca 证书ca-cert 绑定部件是属于peer还是orderer组织的


交易和通信被fabric的an entity’s private key (keystore) 签名，他会验证 
verified by means of a public key (signcerts) 公钥信息

count 选项被设置Organization 组织内有多少个peer


http://www.jianshu.com/p/b4674d3f7ebd
而在1.0版中是由排序者（Orderer）完成共识功能，其文档中定义了Solo、Kafka和PBFT三个排序者。但从1.0的代码来看，其使用的却是SBFT共识算法，还是类似PBFT的三阶段提交方式。



abric1.0会把原来0.6验证节点的职责切分成两部分：背书节点和共识服务
由背书节点进行交易验证和背书
验证功能的共识系统变成了纯技术的共识服务，同具体的chaincode业务执行无关。
Fabric1.0基于通道对所有交易消息进行排序并全序广播相关节点


http://colorbit.com.cn/forum.php?mod=viewthread&tid=7514
在Fabric1.0中会提供三种共识时序服务：solo, kafka, BFT。solo应该是一种部署在单个节点上的简单时序服务，主要用于开发测试。kafka是一种支持多通道分区的集群时序服务，可以容忍部分节点失效，注意这里的失效是节点crash down，而不是恶意节点，其基于zookeeper进行Paxos算法选举，支持2f+1节点集群，f代表失效节点个数。BFT也是一种集群时序服务，可更进一步地可以容忍拜占庭节点，拜占庭节点是恶意节点，这些恶意节点可能会故意伪造时序数据。可以看出Fabric1.0所支持的共识时序服务机制实现了组件插件化，可以根据实际部署的不同环境进行共识实现机制的选择，从solo到kafka再到BFT，所面临的部署环境越来越复杂不可信，当然所带来不利因素可能会是时序服务处理性能上的下降



fabric 1.0 版本介绍：
https://zhuanlan.zhihu.com/p/25383775



Blockchain区块链架构设计之四：Fabric多通道和下一代账本设计
https://zhuanlan.zhihu.com/p/24605987


仔细看，实验
创建隧道+创世块  https://zhuanlan.zhihu.com/p/25070745


http://www.jianshu.com/p/b4674d3f7ebd 摘要信息



熟悉fabric 1.0 搭建 ： CA peer 多链  单链  之间的关系


生成创世区块：
$CONFIGTXGEN -profile TwoOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block
根据配置文件configtx.yaml 
创世快中包含了：
可信根节点列表
orderer证书
IP地址列表
一组特定的共识算发列表
访问控制策略（设可以创建隧道）



隧道配置文件：
channel.tx
configtxgen  -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME
根据配置文件configtx.yaml 





peer：
要启动并连接到共识服务，peer至少需要以下配置：

1.准入网络的注册证书。 证书可以来自任意CA，只要CA是peer将连接到的共识服务的可信任根的一部分

2.来自共识服务管理CLI生成的Orderer证书和IP地址的列表

3.可信任根节点列表

4.peer可以订阅的通道可选列表。 除非明确配置，否则peer在启动时不订阅任何通道

注意，＃2和＃3来自引导的创世区块，我们可以从引导CLI命令获得。

通过CLI或使用SDK API的应用程序，peer可以订阅已经存在的通道。 order通过在通道创建或重新配置期间收到的消息决定谁可以加入通道。

具体细化SDK设置，查看：https://zhuanlan.zhihu.com/p/24605987


fabric 1.0   2个节点：
背书节点和共识服务节点

背书节点进行交易验证和背书


设计细节：
https://mp.weixin.qq.com/s?__biz=MzA3NTM1ODc5Mg==&mid=2452145857&idx=1&sn=a8c52bbe7e1b9177eec7e7a896e3bd25&chksm=88add1e6bfda58f06ada59f86414cc516cc5b8ff574eeb5b30f3fe0d95dc6bc403d8486fd44a&mpshare=1&

https://zhuanlan.zhihu.com/p/25119939



yaml语法：
七、引用
锚点&和别名*，可以用来引用。

defaults: &defaults
  adapter:  postgres
  host:     localhost

development:
  database: myapp_development
  <<: *defaults

test:
  database: myapp_test
  <<: *defaults

等同于下面的代码:

defaults:
  adapter:  postgres
  host:     localhost

development:
  database: myapp_development
  adapter:  postgres
  host:     localhost

test:
  database: myapp_test
  adapter:  postgres
  host:     localhost
&用来建立锚点（defaults），<<表示合并到当前数据，*用来引用锚点。




+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。












