

protoc 的使用：
http://www.cnblogs.com/YaoDD/p/5504881.html
protoc --go_out=plugins=grpc:. stream.pro

go get -u github.com/golang/protobuf/{proto,protoc-gen-go}
go get -u google.golang.org/grpc
protoc --go_out=plugins=grpc:. *.proto


pro3:
Unrecognized syntax identifier "proto3". This parser only recognizes "proto2".

升级安装新版本protobuf：
https://github.com/google/protobuf/releases

——————————————————————————————————————————————————————————————

liuhy@liuhy ~/postgresql/bin $ ./initdb -U SYSTEM -D ../data 
The files belonging to this database system will be owned by user "liuhy".
This user must also own the server process.

The database cluster will be initialized with locales
  COLLATE:  en_US.UTF-8
  CTYPE:    en_US.UTF-8
  MESSAGES: en_US.UTF-8
  MONETARY: zh_CN.UTF-8
  NUMERIC:  zh_CN.UTF-8
  TIME:     en_US.UTF-8
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

creating directory ../data ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting dynamic shared memory implementation ... posix
creating configuration files ... ok
creating template1 database in ../data/base/1 ... ok
initializing pg_authid ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects' descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok
syncing data to disk ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    ./pg_ctl -D ../data -l logfile start

或者前台启动：
 ./postgres -D ../data --log_statement=all


设置SUPERUSER man：
 ./createuser -U STSTEM --superuser root -h 127.0.0.1
./createdb -U SYSTEM fabric
 ./psql -U root -d fabric  -h 127.0.0.1 -p 5432 


root用户增加密码：
TEST=# \password root
Enter new password:  123456
Enter it again: 
TEST=# 
TEST=# 
TEST=# \q


这样就增加一个用户 root
密码 123456


objet：
http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html

查看链接数：
select * from pg_stat_activity;
________________________________________________


tar -xzf  apache-maven-3.3.9-bin.tar.gz  -C ./tmp   --strip-components 1



查看系统日志命令：
journalctl -xn' for details.




protoc --go_out=plugins=grpc:./gen-go taochees.proto

启动ca：
docker run -it  -p 8854:7054 yeasy/hyperledger-fabric-ca:latest  


进入容器：
docker exec -it vigilant_allen  /bin/bash


docker run -d -it  -p 8054:7054 yeasy/hyperledger-fabric-ca   /bin/bash


golang调试执行：
go build  -gcflags "-N -l"  -o appca fabric_ca.go base_setup.go 



升级docker-compose:
sudo curl -L https://github.com/docker/compose/releases/download/1.10.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/bin/docker-compose

sudo chmod +x /usr//bin/docker-compose


下载版本兼容的docker 程序：
wget -qO- https://get.docker.com/ | sh

Docker安装完启动时提示Failed to start docker.service: Unit docker.service is masked.
Ubutntu安装完Docker后，执行

sudo service docker start
1
1
提示

Failed to start docker.service: Unit docker.service is masked.
解决方案：

执行如下三条指令

systemctl unmask docker.service
systemctl unmask docker.socket
systemctl start docker.service



